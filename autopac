#!/bin/sh
# Automate installing and upgrading packages on most systems

[ "$1" = "-v" ] && printf "autopac 1.0.0 \n" && exit 0

[ "$1" = "-f" ] && [ -f /usr/bin/flatpak ] && flatpak update -y && exit 0

[ "$1" = "-s" ] && [ -f /usr/bin/snap ] && sudo snap refresh && exit 0

[ "$1" = "--help" ] || [ "$1" = "-h" ] &&
printf "Usage: $0 [OPTION] \nOptions:\n -i  Install software \n -u  Upgrade software \n -f  Upgrade flatpaks \n -h  Show options\n" && exit 0

# Find manager in the array, if found set it as the current manager
export mgr="/usr/bin/apt /usr/bin/dnf /usr/bin/pacman
            /sbin/apk    /sbin/pkg    /usr/sbin/pkg_add"
for item in ${mgr}; do
    if [ -f $item ]; then
        pkgMgr=$item
        break
    fi
done

[ "$1" = "-u" ] && case "$pkgMgr" in
	/usr/bin/pacman)
		sudo pacman -Syy
		echo "y" | sudo pacman -Su
		printf "\n-- QUERYING DATABASE FOR ORPHANS --\n"
		echo "ORPHANS:"
		sudo pacman -Qdt
		exit 0
	;;

	/usr/bin/apt)
		sudo apt update
		sudo apt upgrade -y
		printf "\n-- REMOVING UNUSED PACKAGES --\n"
		sudo apt autoremove -y
		exit 0
	;;

	/usr/bin/dnf)
		sudo dnf check-update
		yes "y" | sudo dnf upgrade
		printf "\n-- REMOVING UNUSED PACKAGES --\n"
		echo "y" | sudo dnf autoremove
        exit 0
	;;

	/sbin/apk)
		apk update
		apk upgrade
		exit 0
	;;

	/sbin/pkg)
		echo "y" | pkg upgrade && echo "y" | pkg autoremove
		exit 0
	;;

	/usr/sbin/pkg_add)
		pkg_add -u
		exit 0
	;;

	*)
		printf "\n-- PACKAGE MANAGER NOT FOUND --\n" && exit 1
	;;
esac

# Install each package in the text file
ins() {
    for pkg in $(cat software.txt); do
        echo "y" | $1 $pkg
    done
    exit 0
}

[ "$1" = "-i" ] && case "$pkgMgr" in
	/usr/bin/pacman)
		sudo pacman -Syy
		ins "sudo pacman -S"
	;;

	/usr/bin/apt)
		sudo apt update
		ins "sudo apt install"
	;;

	/usr/bin/dnf)
		ins "sudo dnf install"
	;;

	/sbin/apk)
		apk update
		ins "apk add"
	;;

	/sbin/pkg)
		ins "pkg install"
	;;

	/usr/sbin/pkg_add)
		ins "pkg_add"
	;;

	*)
		printf "\n-- PACKAGE MANAGER NOT FOUND --\n" && exit 1
	;;
esac
printf "$0: invalid option -- '$1' \nTry --help for more information\n"
