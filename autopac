#!/bin/sh

#	autopac: Automate installing and upgrading packages on most systems

#   Copyright 2023, 2024, 2025	Eric Hernandez

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       https://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#	See the License for the specific language governing permissions and
#   limitations under the License.

[ ! "$1" ] || [ "$1" = "--help" ] || [ "$1" = "-h" ] &&
printf "Usage: autopac [OPTION] \nOptions:\n -i  Install software \n -c [LIST] Use specific list \n -u  Upgrade software \n -f  Upgrade flatpaks \n -h  Show options\n" && exit 0

[ "$1" = "-v" ] && printf "autopac 1.1 \n" && exit 0

[ "$1" = "-f" ] && [ -f /usr/bin/flatpak ] && flatpak update -y && exit 0

[ "$1" != "-c" ] && [ ! "$2" ] && printf "ERROR: You must specify the user as the second argument \n" && exit 1

mkdir /home/$2/.config/autopac/ 2> /dev/null

if [ "$1" = "-c" ]; then
	[ ! $2 ] || [ ! -f $2 ] && printf "ERROR: A valid list file must be specified \n" && exit 1
	software_list="$2"
else
	software_list="/home/$2/.config/autopac/software.config"
fi

if [ "$1" = "-i" ] && [ ! -f $software_list ]; then
	touch $software_list 2> /dev/null
	printf "NOTICE: The software list at $software_list does not exist\n"
	printf "Please write the names of the packages you want installed there and try again\n"
	exit 1
fi

if [ $(whoami) != "root" ]; then
	printf "ERROR: You must run this script as root \n"
	exit 1
fi

[ "$1" = "-s" ] && [ -f /usr/bin/snap ] && snap refresh && exit 0

export mgr="/usr/bin/apt /usr/bin/dnf /usr/bin/pacman
            /sbin/apk   /usr/sbin/pkg /usr/sbin/pkg_add"
for item in ${mgr}; do
    if [ -f $item ]; then
        pkgMgr=$item
        break
    fi
done

case "$pkgMgr" in
	/usr/bin/pacman)
		pacman -Syy
		[ "$1" = "-i" ] || [ "$1" = "-c" ] && echo "y" | pacman -S $(cat $software_list)
		echo "y" | pacman -Su
		printf "\n-- QUERYING DATABASE FOR ORPHANS --\n"
		echo "ORPHANS:"
		pacman -Qdt
		exit 0
	;;

	/usr/bin/apt)
		apt update
		[ "$1" = "-i" ] || [ "$1" = "-c" ] && echo "y" | apt install $(cat $software_list)
		apt upgrade -y
		printf "\n-- REMOVING UNUSED PACKAGES --\n"
		apt autoremove -y
		exit 0
	;;

	/usr/bin/dnf)
		dnf check-update
		[ "$1" = "-i" ] || [ "$1" = "-c" ] && echo "y" | dnf install $(cat $software_list)
		yes "y" | dnf upgrade
		printf "\n-- REMOVING UNUSED PACKAGES --\n"
		echo "y" | dnf autoremove
        exit 0
	;;

	/sbin/apk)
		apk update
		[ "$1" = "-i" ] || [ "$1" = "-c" ] && echo "y" | apk add $(cat $software_list)
		apk upgrade
		exit 0
	;;

	/usr/sbin/pkg)
		[ "$1" = "-i" ] || [ "$1" = "-c" ] && echo "y" | pkg install $(cat $software_list)
		echo "y" | pkg upgrade && echo "y" | pkg autoremove
		exit 0
	;;

	/usr/sbin/pkg_add)
		[ "$1" = "-i" ] || [ "$1" = "-c" ] && echo "y" | pkg_add $(cat $software_list)
		pkg_add -u
		exit 0
	;;

	*)
		printf "\n-- PACKAGE MANAGER NOT FOUND --\n" && exit 1
	;;
esac

printf "autopac: invalid option -- '$1' \nTry --help for more information\n"
